name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: "ci"
  cancel-in-progress: true

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Check Quality Gate
        run: |
          if [ -f .sonar/report-task.txt ]; then
            ceTaskUrl=$(cat .sonar/report-task.txt | grep ceTaskUrl | cut -d'=' -f2-)
            echo "SonarCloud task URL: $ceTaskUrl"
            
            # Get the task status
            taskId=$(echo $ceTaskUrl | grep -o '[^/]*$')
            
            # The SonarCloud GitHub Action already waits for the quality gate
            # and fails if it doesn't pass due to sonar.qualitygate.wait=true
            echo "Quality gate check completed by SonarCloud action"
          else
            echo "No SonarCloud report found"
            exit 1
          fi

  release:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.11
      - name: Add dependency chart repositories
        run: ./scripts/add_helm_repo.sh
      - name: Install chart-testing
        uses: helm/chart-testing-action@v2.3.1
      - name: List changed charts
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          charts=$(echo "$changed" | tr '\n' ' ' | xargs)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "changed_charts=$charts" >> $GITHUB_OUTPUT
          fi
      - name: Lint charts
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}
